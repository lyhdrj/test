<?xml version="1.0" encoding="GBK"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="PositionManage">

	<typeAlias alias="positionBean" type="com.nasoft.sysmanage.model.PositionBean" />
	<typeAlias alias="userLogin" type="com.nasoft.sysmanage.model.UserLoginBean" />
	<typeAlias alias="roleBean" type="com.nasoft.sysmanage.model.RoleBean" />
	<typeAlias alias="orgBean" type="com.nasoft.sysmanage.model.OrgBean" />

	<resultMap id="positionResult" class="positionBean">
		<result property="positionCode" column="code" />
		<result property="positionName" column="name" />
		<result property="orgCode" column="parentCode" />
		<result property="status" column="status" />
	</resultMap>

	<resultMap id="roleResult" class="roleBean">
		<result property="roleID" column="role_id" />
		<result property="roleName" column="role_name" />
	</resultMap>

	<resultMap id="orgResult" class="orgBean">
		<result property="orgName" column="org_name" />
		<result property="comCode" column="company_code" />
		<result property="orgID" column="org_id" />
	</resultMap>

	<resultMap id="positionInfoResult" class="positionBean">
		<result property="positionID" column="position_id" />
		<result property="number" column="rownum"/>
		<result property="positionName" column="position_name" />
		<result property="memo" column="memo" />
		<result property="orgCode" column="org_code" />
	</resultMap>

	<resultMap id="positionOneInfoResult" class="positionBean">
		<result property="positionName" column="position_name" />
		<result property="memo" column="memo" />
		<result property="orgName" column="org_name" />
		<result property="roleID" column="role_id" />
		<result property="comCode" column="company_code" />
		<result property="orgCode" column="org_code" />
	</resultMap>

	<select id="getAllPositionCode" resultMap="positionResult">
		(select company_code
		as code, company_name as name , parent_com_code as
		parentCode,status from tm_company )
		union
		(
		select org_code, org_name, parent_org_code, status from
		tm_org )
		union
		(select 'p'||to_char(position_id),
		position_name,org_code,
		status
		from tm_position)
   </select>

	<select id="getPositionCode" parameterClass="userLogin"
		resultMap="positionResult">
		select code, name, parentcode, status from
		((select company_code as code, company_name as name , parent_com_code
		as
		parentCode,status from tm_company )
		union
		( select org_code, org_name, parent_org_code,status from
		tm_org )
		union (select 'p'||to_char(position_id),
		position_name,org_code,
		status from tm_position))
		where
		status!=1 or (status=1
		and code=#managementCode#) start with code =
		#managementCode#
		connect by
		prior code = parentcode
   </select>

	<select id="getRoleInfo" resultMap="roleResult" parameterClass="java.lang.String">
		select role_id, role_name from tm_role where
		company_code=#companyCode# 
   </select>

	<select id="getOrgName" parameterClass="java.lang.String"
		resultMap="orgResult">
		select org_name,company_code,org_id from tm_org where
		org_code=#orgCode#
	</select>

	<select id="getPositionInfo" parameterClass="java.lang.String"
		resultMap="positionInfoResult">
		select rownum, position_id, position_name, memo,
		org_code from
		tm_position
		where org_code=#orgCode#
   </select>

	<select id="checkUpdateInfo" parameterClass="positionBean"
		resultClass="java.lang.Integer">
		select count(*) from tm_position where
		position_name=#positionName#
		and position_id!=#positionID#
		and
		org_id=(select org_id from tm_position where
		position_id=#positionID#)
	</select>

	<select id="checkInsertInfo" parameterClass="positionBean"
		resultClass="java.lang.Integer">
		select count(*) from tm_position where
		position_name=#positionName#
		and company_code=#comCode# and
		org_id=#orgID#
   </select>
	
	<select id="getSequence" resultClass="java.lang.Integer">
		select Seq_Position.Nextval
		as positionID from dual
   </select>

	<insert id="addPositionInfo" parameterClass="positionBean">
		insert into
		tm_position(position_id, company_code,org_id, position_name,
		status, memo, create_date, create_by, org_code)
		values(#positionID#,#comCode#,#orgID#,#positionName#,3,#memo#,
		sysdate,#userId#,#orgCode#)
   </insert>

	<insert id="addPositionRoleInfo" parameterClass="positionBean">
		insert into
		tm_position_role (position_role_id, position_id, role_id,
		create_date,
		create_by, company_code)
		values(Seq_Position_Role.Nextval,#positionID#,#roleID#,
		sysdate,#userId#,#comCode#)
   </insert>

	<select id="getOneInfo" parameterClass="java.lang.String"
		resultMap="positionOneInfoResult">
		select t.position_name,
		t.memo,h.org_name,s.role_id,t.company_code,h.org_code
		from tm_position
		t,tm_org h,tm_position_role s
		where t.org_code=h.org_code and
		t.position_id=s.position_id and
		t.position_id=#positionID#
   </select>

	<update id="updatePositionInfo" parameterClass="positionBean">
		update
		tm_position set position_name = #positionName#, memo = #memo#,create_date = sysdate,create_by =
		#userId#
		where position_id = #positionID#
   </update>

	<update id="updatePositionRoleInfo" parameterClass="positionBean">
		update
		tm_position_role set role_id = #roleID#,create_date =
		sysdate,create_by = #userId#
		where position_id = #positionID#
   </update>

	<select id="getUserInfo" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select user_id from tm_position_user where
		position_id=#positionId#
   </select>

	<select id="getMenuInfo" parameterClass="positionBean"
		resultClass="java.lang.String">
		select menu_id from TM_MENU WHERE MENU_ID IN (select
		MENU_ID from
		tm_menu_role where ROLE_ID=#roleID#
		and menu_id in
		($funcPwdMenuId$))
		order by menu_id
   </select>

	<delete id="deletePositionInfo" parameterClass="java.lang.String">
		delete
		tm_position where position_id = #positionID#
    </delete>

	<delete id="deletePositionRole" parameterClass="java.lang.String">
		delete
		tm_position_role where position_id=#positionID#
    </delete>
    <delete id="deletePositionUser" parameterClass="java.lang.String">
		delete
		tm_position_user where position_id=#positionID#
    </delete>
	<delete id="deleteUser" parameterClass="java.lang.String">
		delete tm_user where user_id=#userId#
	</delete>
	<select id="getPositionCount" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		select count(*) from tm_position where org_code=#orgCode#
	</select>
</sqlMap>